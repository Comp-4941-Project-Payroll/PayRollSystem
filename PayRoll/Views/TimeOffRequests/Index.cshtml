@model PayRoll.Models.TimeOffRequest

@{
    ViewBag.Title = "Request Time Off";
    PayRoll.Models.TypeOfTimeOff[] typesOfTimeOffRequests = (PayRoll.Models.TypeOfTimeOff[])ViewData["typesOfTimeOff"];
}
<h2>Request Time Off</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter the following fields</h4>
        <hr />
        <table class="col-lg-12">
            <tr>
                <td>
                    <div class="form-group">
                        <label for="Type" class="control-label col-md-2" style="width:auto;">Type</label>
                        <div class="col-md-10">
                            <select name="Type" id="Type" class="form-control single-line">
                                @for (var i = 0; i < typesOfTimeOffRequests.Length; i++)
                                {
                                    <option>@typesOfTimeOffRequests[i].Type</option>
}
                            </select>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:auto;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:auto;" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="3">
                    <div class="form-group">
                        <b>@Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left;" })</b>
                        <div class="col-lg-12">
                            @Html.TextAreaFor(model => model.Reason, new { @class = "form-control", @rows = 5, @style = "max-width:none;" })
                            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        @*<div class="form-group">
            <label for="Type" class="control-label col-md-2">Type</label>
            <div class="col-md-10">
                <select name="Type" id="Type" class="form-control single-line">
                    @for (var i = 0; i < typesOfTimeOffRequests.Length; i++) {
                        <option>@typesOfTimeOffRequests[i].Type</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Reason, new { @class = "form-control", @rows = 5 })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Send Request" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}